SubDir HAM_TOP src grammar ;

SubDirSysHdrs $(HAM_BOOST_HEADERS) ;

SubDirHdrs [ FDirName $(TARGET_DEBUG_$(DEBUG)_LOCATE_TARGET) $(DOTDOT) ] ;
	# So that the precompiled header is found first.

SubDirHdrs [ FDirName $(HAM_TOP) src ] ;


# We might need PIC flags, since we're building a shared library.
CCFLAGS += $(TARGET_PIC_CCFLAGS) ;
C++FLAGS += $(TARGET_PIC_C++FLAGS) ;


MergeObject ham_grammar.o
	:
	Grammar.cpp
	Grammar_InitActionsDefinition.cpp
	Grammar_InitArgument.cpp
	Grammar_InitExpression.cpp
	Grammar_InitRuleDefinition.cpp
	Grammar_InitStatement.cpp
	Grammar_InitString.cpp
	NodeRegistry.cpp
	Parser.cpp
;


PrecompileHeader grammar/Spirit.hpp ;
