# Copyright 2022, Dominic Martinez, dom@dominicm.dev
# Distributed under the terms of the MIT License.

#!multipleFiles
---
# Don't include missing sources in 'existing' actions
# target	- target
# source1	- source
# source2	- source (missing)
# source3	- source
#
#!file Jamfile
actions existing EchoExisting
{
	echo $(2) >> $(1)
}

LOCATE on target = . ;
LOCATE on source1 = . ;
LOCATE on source2 = . ;
LOCATE on source3 = . ;

EchoExisting target : source1 source2 source3 ;
Depends all : target ;
#!file source1
Already exists
#!file source3
Already exists
-
#!file target
./source1 ./source3
---
# Include all existing sources in 'existing' actions
# target	- target
# source1	- source
# source2	- source
# source3	- source
#
#!file Jamfile
actions existing EchoExisting
{
	echo $(2) >> $(1)
}

LOCATE on target = . ;
LOCATE on source1 = . ;
LOCATE on source2 = . ;
LOCATE on source3 = . ;

EchoExisting target : source1 source2 source3 ;
Depends all : target ;
#!file source1
Already exists
#!file source2
Already exists
#!file source3
Already exists
-
#!file target
./source1 ./source2 ./source3
---
# Don't run 'existing' actions without any existing sources
# target	- target
# source1	- source (missing)
# source2	- source (missing)
# source3	- source (missing)
#
#!file Jamfile
actions existing EchoAction
{
	echo $(2) >> $(1)
}

LOCATE on target = . ;
LOCATE on source1 = . ;
LOCATE on source2 = . ;
LOCATE on source3 = . ;

EchoAction target : source1 source2 source3 ;
Depends all : target ;
-
#!file target missing
---
# Updated modifier, independent targets
# target	- target
# source1	- source (missing)
# source2	- source (missing)
# source3	- source (missing)
#!file Jamfile
actions updated EchoAction
{
	echo $(2) >> $(1)
}

LOCATE on target = . ;
LOCATE on source1 = . ;
LOCATE on source2 = . ;
LOCATE on source3 = . ;

NOTFILE source2 ;
EchoAction target : source1 source2 source3 ;
Depends all : target ;
Depends target : source2 ;
-
#!exception
using independent target source1 in an 'updated' action
#!file target missing
---
# Updated modifier, independent targets, compatibility
# target	- target
# source1	- source (missing)
# source2	- source (missing)
# source3	- source (missing)
#!file Jamfile
#!compat jam boost !ham
actions updated EchoAction
{
	echo $(2) >> $(1)
}

LOCATE on target = . ;
LOCATE on source1 = . ;
LOCATE on source2 = . ;
LOCATE on source3 = . ;

NOTFILE source2 ;
EchoAction target : source1 source2 source3 ;
Depends all : target ;
Depends target : source2 ;
-
#!file target
./source1 ./source2 ./source3
---
# Updated modifier, some targets updated
# target	- target
# source1	- source (older)
# source2	- source (newer)
# source3	- source (older)
#!file Jamfile
rule JoinFiles
{
	Depends $(1) : $(2) ;
}

actions updated JoinFiles
{
	cat $(2) > $(1)
	echo "Updated" >> $(1)
}

LOCATE on target = . ;
JoinFiles target : source1 source2 source3 ;
Depends all : target ;

#!file target 1
Old
#!file source1 2
Source1
#!file source2 0
Source2
#!file source3 2
Source3
-
#!file target
Source2
Updated
---
# Updated modifier, all targets updated
# target	- target
# source1	- source (newer)
# source2	- source (newer)
# source3	- source (newer)
#!file Jamfile
rule JoinFiles
{
	Depends $(1) : $(2) ;
}

actions updated JoinFiles
{
	cat $(2) > $(1)
	echo "Updated" >> $(1)
}

LOCATE on target = . ;
JoinFiles target : source1 source2 source3 ;
Depends all : target ;

#!file target 1
Old
#!file source1
Source1
#!file source2
Source2
#!file source3
Source3
-
#!file target
Source1
Source2
Source3
Updated
---
# Updated modifier, no targets updated in an invocation
# target	- target
# source1	- source (older)
# source2	- source (newer)
# source3	- source (newer)
#!file Jamfile
rule JoinFiles
{
	Depends $(1) : $(2) ;
}

actions updated JoinFiles
{
	cat $(2) >> $(1)
	echo "Updated" >> $(1)
}

LOCATE on target = . ;
JoinFiles target : source1 ;
JoinFiles target : source2 ;
JoinFiles target : source3 ;
Depends all : target ;

#!file target 1
Old
#!file source1 2
Source1
#!file source2
Source2
#!file source3
Source3
-
#!file target
Old
Source2
Updated
Source3
Updated
---
# Updated modifier, targets updated indirectly
# oldTarget		- target (old)
#  source1		- source (directly updated)
#  source2		- source (directly not updated)
#  gen			- source (missing, being made)
#  newTarget	- target (new)
#   source3		- source (indirectly updated, newer than both)
#   source4		- source (indirectly updated, newer than target)
#   source5		- source (indirectly not updated, older than target)
# siblingTarget	- target (old)
#  source6		- source (updated for sibling)
# emptyTarget	- target
#  pseudo		- source (pseudotarget)
#!file Jamfile
rule JoinFiles
{
	Depends $(1) : $(2) ;
}

actions updated JoinFiles
{
	cat $(2) > $(1)
	echo "Updated" >> $(1)
}

actions GenSource
{
	echo Created $(1) > $(1)
}

NOTFILE pseudo ;
LOCATE on newTarget = . ;
LOCATE on oldTarget = . ;
LOCATE on siblingTarget = . ;
LOCATE on emptyTarget = . ;
LOCATE on gen = . ;

GenSource gen ;

JoinFiles oldTarget
		  : source1
		   	source2
		  	source3
		  	source4
		  	source5
		  	source6
		  	gen ;
JoinFiles siblingTarget : source6 ;
JoinFiles newTarget : source3 source4 source5 ;
JoinFiles emptyTarget : pseudo ;

Depends oldTarget : newTarget ;
Depends all : oldTarget siblingTarget emptyTarget ;

#!file siblingTarget 4
Sibling
#!file oldTarget 3
Old
#!file newTarget 1
New
#!file source1
Source1
#!file source2 3
Source2
#!file source3
Source3
#!file source4 2
Source4
#!file source5 3
Source5
#!file source6 3
Source6
-
#!file oldTarget
Source1
Source3
Source4
Created ./gen
Updated
#!file siblingTarget
Source6
Updated
#!file newTarget
Source3
Updated
#!file emptyTarget missing
#!file gen
Created ./gen
---
# Updated modifier, multiple targets
# target1	- target
# target2	- target
# source	- source
#!file Jamfile
rule JoinFiles
{
	Depends $(1) : $(2) ;
}

actions updated JoinFiles
{
	cat $(2) >> $(1)
	echo "Updated" >> $(1)
}

LOCATE on target1 = . ;
LOCATE on target2 = . ;
JoinFiles target1 target2 : source ;
Depends all : target1 target2 ;

#!file source
Source
-
#!exception
Error: Action JoinFiles has 'updated' modifier and must be passed exactly 1 target, but was passed 2
---
# Combine 'actions together' on the same target.
# target	- target (missing)
#
#!file Jamfile
rule EchoOnce
{
	Depends $(1) : $(2) ;
}

actions together EchoOnce
{
	if [ " $(2) " = " source1 source2 " ] \
	|| [ " $(2) " = " source2 source1 " ]; then
		echo Pass >> $(1)
	else
		echo Failed with $(2) >> $(1)
	fi
}

NOTFILE source1 source2 ;

LOCATE on target = . ;
EchoOnce target : source1 ;
EchoOnce target : source2 ;

Depends all : target ;

-
#!file target
Pass
---
# Don't combine 'actions together' on different targets.
# target1	- target (missing)
# target2	- target (missing)
#
#!file Jamfile
rule EchoOnce
{
	Depends $(1) : $(2) ;
}

actions together EchoOnce
{
	echo "Action called by $(2)" >> "$(1)"
}

NOTFILE source1 source2 ;

LOCATE on target1 = . ;
LOCATE on target2 = . ;
EchoOnce target1 : source1 ;
EchoOnce target2 : source2 ;

Depends all : target1 target2 ;

-
#!file target1
Action called by source1
#!file target2
Action called by source2
---
# Don't combine 'actions together' on different rules.
# target	- target (missing)
#
#!file Jamfile
actions together EchoOnce1
{
	echo "Action called by $(2)" >> "$(1)"
}

actions together EchoOnce2
{
	echo "Action called by $(2)" >> "$(1)"
}

NOTFILE source1 source2 ;

LOCATE on target = . ;
EchoOnce1 target : source1 ;
EchoOnce2 target : source2 ;

Depends target : source1 source2 ;

Depends all : target ;

-
#!file target
Action called by source1
Action called by source2
---
# Error when together action is passed multiple targets
#
#!file Jamfile
rule EchoOnce
{
	Depends $(1) : $(2) ;
}

actions together EchoOnce
{
	echo "Action called by $(2)" >> "$(1)"
}

NOTFILE source1 source2 ;

LOCATE on target1 = . ;
LOCATE on target2 = . ;
EchoOnce target1 target2 : source1 ;
EchoOnce target1 target2 : source2 ;

Depends all : target1 target2 ;
-
#!exception
Error: Action EchoOnce has 'together' modifier and must be passed exactly 1 target, but was passed 2
---
# Piecemeal, multiple lines, exact
#
#!file Jamfile
rule EchoPiece
{
    Depends $(1) : $(2) ;
}

actions piecemeal maxline 52 EchoPiece
{
    echo Ran with sources $(2) >> $(1)
}

NOTFILE source11 source12 source21 source22 source31 ;

LOCATE on target = . ;
EchoPiece target : source11 source12 source21 source22 source31 ;
Depends all : target ;
-
#!file target
Ran with sources source11 source12
Ran with sources source21 source22
Ran with sources source31
---
# Piecemeal, multiple lines, 1 less
#
#!file Jamfile
rule EchoPiece
{
    Depends $(1) : $(2) ;
}

actions piecemeal maxline 49 EchoPiece
{
    echo Ran with sources $(2) >> $(1)
}

NOTFILE source11 source12 source21 source22 source31 ;

LOCATE on target = . ;
EchoPiece target : source11 source12 source21 source22 source31 ;
Depends all : target ;
-
#!file target
Ran with sources source11
Ran with sources source12
Ran with sources source21
Ran with sources source22
Ran with sources source31
---
# Piecemeal, multiple lines, 1 more
#
#!file Jamfile
rule EchoPiece
{
    Depends $(1) : $(2) ;
}

actions piecemeal maxline 51 EchoPiece
{
    echo Ran with sources $(2) >> $(1)
}

NOTFILE source11 source12 source21 source22 source31 ;

LOCATE on target = . ;
EchoPiece target : source11 source12 source21 source22 source31 ;
Depends all : target ;
-
#!file target
Ran with sources source11 source12
Ran with sources source21 source22
Ran with sources source31
---
# Piecemeal, single line
#
#!file Jamfile
rule EchoPiece
{
    Depends $(1) : $(2) ;
}

actions piecemeal maxline 78 EchoPiece
{
    echo Ran with sources $(2) >> $(1)
}

NOTFILE source11 source12 source21 source22 source31 ;

LOCATE on target = . ;
EchoPiece target : source11 source12 source21 source22 source31 ;
Depends all : target ;
-
#!file target
Ran with sources source11 source12 source21 source22 source31
---
